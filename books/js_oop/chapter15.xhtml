<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="ja">
  <head>
    <title></title>
    <link href='css/style.css' rel='stylesheet' type='text/css'/>
<link href='css/syntax.css' rel='stylesheet' type='text/css'/>
  </head>
  <body>
<h2>１４章　Object.createメソッド</h2>

<p>ここまで来れば僕が何を言いたいのかが分かると思います。</p>

<p>「それ、<code>Object.create</code>メソッドでできるよ！」ってことですね。</p>

<p><code>Object.create</code>メソッドは、先のObjectCreate関数と同様に、その第２引数にプロパティを取れますが、より細かい指定ができるようになっています。つまり各プロパティのアクセス属性をここでコントロールできるようになるのです。</p>

<p><code>Object.create</code>を使って、上記と同じオブジェクトを生成してみましょう。</p>

<div class="highlight"><pre><code class="javascript"><span class="kd">var</span> <span class="nx">jonathan</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">iPhone5</span><span class="p">,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">12345</span> <span class="p">},</span> <span class="nx">name</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="s1">&#39;Jonathan&#39;</span> <span class="p">}});</span>
<span class="kd">var</span> <span class="nx">scott</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">iPhone5</span><span class="p">,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="mi">12346</span> <span class="p">},</span> <span class="nx">name</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="s1">&#39;Scott&#39;</span> <span class="p">}});</span>

<span class="nx">jonathan</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span> <span class="c1">// 12345</span>
<span class="nx">jonathan</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span> <span class="c1">// &#39;Jonathan&#39;</span>
<span class="nx">jonathan</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s1">&#39;800-692-7753&#39;</span><span class="p">);</span> <span class="c1">// &#39;Calling to 800-692-7753 ...&#39;</span>
<span class="nx">jonathan</span><span class="p">.</span><span class="nx">iTunes</span><span class="p">(</span><span class="s1">&#39;Imagine&#39;</span><span class="p">,</span> <span class="s1">&#39;John Lennon&#39;</span><span class="p">);</span> <span class="c1">// &#39;Playing: =&gt; `Imagine` of John Lennon&#39;</span>
<span class="nx">jonathan</span><span class="p">.</span><span class="nx">panorama</span><span class="p">();</span> <span class="c1">// &#39;Jonathan Take a Panorama Photo!!&#39;</span>

<span class="nx">scott</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span> <span class="c1">// 12346</span>
<span class="nx">scott</span><span class="p">.</span><span class="nx">name</span><span class="p">;</span> <span class="c1">// &#39;Scott&#39;</span>
<span class="nx">scott</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="s1">&#39;800-275-2273&#39;</span><span class="p">);</span> <span class="c1">// &#39;Calling to 800-275-2273 ...&#39;</span>
<span class="nx">scott</span><span class="p">.</span><span class="nx">iTunes</span><span class="p">(</span><span class="s1">&#39;My Hero&#39;</span><span class="p">,</span> <span class="s1">&#39;Foo Fighters&#39;</span><span class="p">);</span> <span class="c1">// &#39;Playing: =&gt; `My Hero` of Foo Fighters&#39;</span>
<span class="nx">scott</span><span class="p">.</span><span class="nx">panorama</span><span class="p">();</span> <span class="c1">// &#39;Scott Take a Panorama Photo!!&#39;</span>


<span class="kd">var</span> <span class="nx">charlie</span> <span class="o">=</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">Twitter</span><span class="p">,</span> <span class="p">{</span> <span class="nx">account</span><span class="o">:</span> <span class="p">{</span> <span class="nx">value</span><span class="o">:</span> <span class="s1">&#39;charlie&#39;</span> <span class="p">}});</span>

<span class="nx">charlie</span><span class="p">.</span><span class="nx">tweet</span><span class="p">(</span><span class="s1">&#39;JavaScriptなう!&#39;</span><span class="p">);</span> <span class="c1">// &#39;charlie: JavaScriptなう!&#39;</span>
<span class="nx">charlie</span><span class="p">.</span><span class="nx">reply</span><span class="p">(</span><span class="s1">&#39;earl&#39;</span><span class="p">,</span> <span class="s1">&#39;JSのOOPって難しくね？&#39;</span><span class="p">);</span> <span class="c1">// &#39;@earl: JSのOOPって難しくね？&#39;</span>
</code></pre></div>


<p>第２引数におけるプロパティ値の渡し方が少し異なっています。ここには、<code>value</code>の他、<code>writable</code>（書き込み可否）、<code>configurable</code>（再設定可否）、<code>enumerable</code>（for..in可否）などの各プロパティに対する属性指定子を渡せます。デフォルトではこれらは<code>false</code>にセットされます。これら設定によりJavaScriptのオブジェクトが、より本来のオブジェクトっぽい挙動になります。</p>
  </body>
</html>
